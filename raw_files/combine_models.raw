
<!--REMARK PHENIX TITLE START  Put your title here>


<H4><U>Merging two models with combine_models </U></H4>


<!--REMARK PHENIX TITLE END-->

<!--REMARK PHENIX BODY START   Put your text here.
Anything enclosed in header html H4 H5 etc will go in the table of contents>


<P><H5><U>Author(s)</U></H5><P>

<UL>
<LI>combine_models: Tom Terwilliger
</LI></UL>

<P><H5><U>Purpose</U></H5><P>

This routine takes a model and finds pieces of a second model file that 
improve its fit to density when they replace the corresponding pieces in 
the first model.

<P><H5><U>Usage</U></H5><P>
The main uses of phenix.combine_models are:
<UL>
<LI>Taking the best parts of 2 models and merging them to make a new model.
<LI>Replacing a segment in one model with a corresponding segment from another.
</UL>

<P><H5>How combine_models works:</H5><P>

Combine_models starts with two input models. The first model is used as the 
default; if nothing can be found in the second model that is better than what 
is in the first model, then that part of the first model is kept.  The second 
model is used as a template for improving the first model.  Fragments of the 
second model are considered as alternatives for corresponding segments in 
the first model.
<P> The fit of the models to density is used to decide which of a pair of 
fragments is best.  In general, the correlation of model density with the 
map is used as the criterion. In cases where unequal numbers of residues are 
considered, then this correlation is weighted by the square root of the number 
of residues in each case.  During the optional merge_second_model step, the 
scoring is optionally based on correlation of density, or by default, based 
on density at the positions of the main-chain atoms in the model.
<P>If the two input models are not in the same asymmetric unit of the crystal,
then combine_models will move the pieces from the second model to the
corresponding locations in the first model. In this way the final model
has all its parts in the same place.

<P>Combine_models has four main steps, each of which is optional:
<UL>
<LI>Selecting parts of the input models to consider, using atom selections. 
This step allows you to do things such as removing a segment from the first 
model, then crossing with the corresponding segment from the second model,
effectively replacing that segment in a way that you specify.
<LI>Creating as complete a starting model as possible (merge_second_model=True).
  This is done by cutting the second model into small pieces and reassembling 
the first model, considering these pieces along with all the segments in the 
first model as potential pieces of the reassembled model. The result is a new working model.
<LI>Crossing the working model with the second input model, 
allowing only equal-length crossovers
 (matching=True). In this step, pairs of segments in the working model
and the second input model that
have overlapping residues are considered, one at a time. 
The local map correlation is calculated for each residue in each fragment.
Then at each position, the coordinates from one fragment or the other are 
chosen, with the choice crossing over between one fragment and the other only
at positions where the main-chain atoms in the residue are within 
match_distance (default 0.5 A) of each other.
<LI>Crossing the working model with the second input model, 
allowing only unequal-length crossovers
 (non_matching=True). This step is just like the previous one, except that only
unequal-length crossovers are considered.  If this method is included, then
it may be necessary to reassign the sequence afterwards as the alignment
may change
<LI>Checking the sequence.  If unequal-length crossovers are made, then the 
sequence alignment to the model may need to be changed. This step carries that
out.
</UL>

<P><H5><I>Output files from combine_models</I></H5><P>

<b>combine_models.pdb</b>: A PDB file with your combined model.

<P><H5><U>Examples</U></H5><P>

<P><H5>Standard run of combine_models:</H5><P>

  Running combine_models is easy. From the command-line you can
type:
<PRE style="face=courier">phenix.combine_models pdb_in=first.pdb \
   second_pdb_in=second.pdb \
   seq.dat \
   map_coeffs.mtz
</PRE>
This will combine first.pdb and second.pdb based on fit to the map from
map_coeffs.mtz, recheck the sequence alignment to seq.dat, and write out
the resulting model.

<P><H5>Selecting pieces from the two models:</H5><P>

To take first.pdb and then see if residues A21-A30 of second.pdb can improve
it, you can type:
<PRE style="face=courier">phenix.combine_models pdb_in=first.pdb \
   second_pdb_in=second.pdb \
   seq.dat \
   map_coeffs.mtz \
   second_pdb_in_selection=&quot;(chain A and resid 21:30)&quot; \
</PRE>

<P><H5>Replacing a specific segment: </H5><P>

To take first.pdb and then see if residues A21-A30 and B21-B30 can be improved
by replacing them with residues C10-C20 and D10-D20 of second.pdb,
you can tell combine_models to ignore residues A22-A29 and B22-B29 and to 
consider only residues C10-C20 and D10-D20 of second.pdb:
<PRE style="face=courier">phenix.combine_models pdb_in=first.pdb \
   second_pdb_in=second.pdb \
   seq.dat \
   map_coeffs.mtz \
   pdb_in_selection=&quot;(not  ( (chain A or chain B) and resid 22:29) )&quot; \
   second_pdb_in_selection=&quot;( (chain C or chain D) and resid 10:20)&quot; \
</PRE>

<P><H5>Crossing two models that have entirely matched residues:</H5><P>

If your first.pdb and second.pdb have exactly the same residues present,
and just differ in coordinates, then you might want to preserve all the
connectivity by skipping the merge_second_model step, and by skipping the
non_matching crossover step, and by skipping the reassignment of sequence.
You can type preserve_connectivity=True as a shortcut for this:
<PRE style="face=courier">phenix.combine_models pdb_in=first.pdb \
   second_pdb_in=second.pdb \
   seq.dat \
   map_coeffs.mtz \
   preserve_connectivity=True
</PRE>

<P><H5>Replacing a specific segment: </H5><P>


<P><H5><U>Possible Problems</U></H5><P>

<P><H5>Specific limitations and problems:</H5><P>

<P><H5><U>Literature</U></H5><P>

<P><H5><U>Additional information</U></H5><P>


<!--REMARK PHENIX BODY END-->
