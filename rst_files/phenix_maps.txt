
phenix.maps: a command line tool to compute various maps and save them in most
             of known formats.

How to run the command line version:

  1. Run phenix.maps without any arguments: just type phenix.maps in the command
     line and hit Enter. This will creare a parameter file called maps.params,
     which can be renamed if desired.

  2. Edit maps.params file to specify input/output file names, data labels and
     the desired maps. It is possible to request as many maps as desired. By
     default, the file maps.params specifies 5 maps to be created: 2mFo-DFc,
     2mFo-DFc with missing Fobs filled with DFcalc, mFo-DFc and anomalous
     difference maps will be output in MTZ format, and one 2mFo-DFc map will be
     output in CCP4 format.
     NOTE: the anomalous difference map will only be created if the input
     reflection data file contains Bijvoet maps (F+/F- or I+/I-).

  3. Run this command to compute requested maps: phenix.maps maps.params

Alternately, you may specify input files (and additional parameters) directly
on the command line:

  % phenix.maps model.pdb data.mtz

and it will automatically generate the default maps as described above.

Important Facts:

  - phenix.maps is available in PHENIX GUI.

  - The scope of parameters 'map_coefficients' defines the map that will be
    output as Fourier map coefficients. The scope of parameters 'map' defines
    the maps that will be output as CCP4 or X-plor format.

  - To create several maps: duplicate either 'map_coefficients' or 'map' or both
    scopes of parameters as many times as many maps is desired. Then edit each
    of them to define the maps.

  - A map is defined by specifying a map type using 'map_type' keyword available
    within each scope of parameters: 'map_coefficients' or 'map'. The general
    supported format for 'map_type' is: [p][m]Fo+[q][D]Fc[_kick][_filled]. For
    example: 2Fo-Fc, 2mFobs-DFcalc, 3Fobs-2Fmodel, Fo-Fc, mfobs-Dfcalc, anom,
    llg.  The 'map_type' parser will automatically recognize which map is
    requested.

  - The program creates as many files with CCP4 or X-plor formatted maps as
    is requested, and it creates only one MTZ formatted file with
    all Fourier map coefficients in it.

  - The CCP4 or X-plor formatted maps can be computed in the entire unit cell
    or around selected atoms only.

  - Kick maps and missing Fobs filling is done (if requested) as described in
    Adams et al. (2010). Acta Cryst. D66, 213-221.

  - Twinning (if detected) will be accounted for automatically. This can be
    disabled by using "skip_twin_detection=True" keyword.

  - All arrays used in map calculation, for example: Fobs, Fmodel, Fcalc, Fmask,
    m, D, etc., can be output into a CNS or MTZ formatted reflection file.

  - For those who likes to experiment: bulk solvent correction and anisotropic
    scaling can be turned off, the data can be filtered by sigma and resolution.

  - For some map types certain 'map_coefficients' or 'map' scope parameters may
    not be applicable. For example, for "map_type=anomalous" the keywords
    "kicked", "fill_missing_f_obs" and some other are not applicable.

  - For LLG map calculation, if you specify the wavelength any existing heavy
    atoms (P or heavier) will be modeled as anomalous scatterers using the
    theoretical values of f' and f''.

-------------------------------------------------------------------------------

All phenix.maps parameters::

 maps {
   input {
     pdb_file_name = None
     reflection_data {
       file_name = None
       labels = None
       high_resolution = None
       low_resolution = None
       outliers_rejection = True
       french_wilson_scale = True
       french_wilson {
         max_bins = 60
         min_bin_size = 40
       }
       sigma_fobs_rejection_criterion = None
       sigma_iobs_rejection_criterion = None
       r_free_flags {
         file_name = None
         label = None
         test_flag_value = None
         ignore_r_free_flags = False
       }
     }
   }
   output {
     directory = None
     prefix = None
     title = None
     fmodel_data_file_format = mtz
     include_r_free_flags = False
   }
   scattering_table = wk1995 it1992 *n_gaussian neutron
   wavelength = None
   bulk_solvent_correction = True
   anisotropic_scaling = True
   skip_twin_detection = False
   omit {
     method = *simple
     selection = None
   }
   map_coefficients {
     map_type = 2mFo-DFc
     format = *mtz phs
     mtz_label_amplitudes = 2FOFCWT
     mtz_label_phases = PH2FOFCWT
     kicked = False
     fill_missing_f_obs = False
     sharpening = False
     sharpening_b_factor = None
     exclude_free_r_reflections = False
     isotropize = True
   }
   map_coefficients {
     map_type = 2mFo-DFc
     format = *mtz phs
     mtz_label_amplitudes = 2FOFCWT_fill
     mtz_label_phases = PH2FOFCWT_fill
     kicked = False
     fill_missing_f_obs = True
     sharpening = False
     sharpening_b_factor = None
     exclude_free_r_reflections = False
     isotropize = True
   }
   map_coefficients {
     map_type = mFo-DFc
     format = *mtz phs
     mtz_label_amplitudes = FOFCWT
     mtz_label_phases = PHFOFCWT
     kicked = False
     fill_missing_f_obs = False
     sharpening = False
     sharpening_b_factor = None
     exclude_free_r_reflections = False
     isotropize = True
   }
   map_coefficients {
     map_type = anomalous
     format = *mtz phs
     mtz_label_amplitudes = ANOM
     mtz_label_phases = PHANOM
     kicked = False
     fill_missing_f_obs = False
     sharpening = False
     sharpening_b_factor = None
     exclude_free_r_reflections = False
     isotropize = True
   }
   map {
     map_type = 2mFo-DFc
     format = xplor *ccp4
     file_name = None
     kicked = False
     fill_missing_f_obs = False
     grid_resolution_factor = 1/4.
     region = *selection cell
     atom_selection = None
     atom_selection_buffer = 3
     sharpening = False
     sharpening_b_factor = None
     exclude_free_r_reflections = False
     isotropize = True
   }
 }
