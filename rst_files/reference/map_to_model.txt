Model-building into cryo-EM and low-resolution maps with map\_to\_model
=======================================================================

Author(s)
---------

-  map\_to\_model: Tom Terwilliger

Purpose
-------

The routine map\_to\_model will interpret a map (cryo-EM, low-resolution
X-ray) and try to build an atomic model, fully automatically.

Usage
-----

How map\_to\_model works:
----------------------------

If you have a CCP4-style (mrc, etc) map or just mtz map coefficients 
and a sequence file, you can use map\_to\_model to build a model into
your map. The tool map\_to\_model will identify what kind of chains to
build based on your sequence file.  It will find where your molecule is
in the map and cut out and work with just that part of the density.
If your map has been averaged based on NCS symmetry and 
you supply a file with that NCS information (.ncs_spec, biomtr.dat, etc),
map\_to\_model will find the asymmetric unit of NCS, build that, then
expand to the entire map.  The map\_to\_model tool will cut the density 
in your map into small pieces of connected density and 
try to build model into each one. It will merge all the 
pieces into a compact model, refine it, and superimpose 
final model on the original map. The type of chain or chains to be
built are chosen based on your sequence file.  If multiple chain types
are considered, the entire map is interpreted with each chain type, then
the best-fitting non-overlapping chains are chosen.

*Output files from map\_to\_model*
----------------------------------

**map\_to\_model.pdb**: A PDB file with the resulting model, superimposed on
   the original map

*Shifting the map to the origin*
--------------------------------

Most crystallographic maps have the origin at the corner of the map (
grid point [0,0,0]), while most cryo-EM maps have the orgin in the 
middle of the map.  To make a consistent map, any maps with an origin not 
at the corner are shifted to put the origin at grid point [0,0,0]. This map
is the shifted map that is used for further steps in model-building.
At the conclusion of model-building, the model is shifted back to 
superimpose on the original map.

*Finding the region containing the molecule*
--------------------------------------------

By default (density\_select=True), the region of the map containing density
is cut out of the entire map. This is particularly useful if the original map
is very large and the molecule only takes up a small part of the map.  This
portion of the map is then shifted to place the origin at grid point [0,0,0].
(At the conclusion of model-building, the final model is shifted back to 
superimpose on the original map.)  The region containing density is chosen
as a box containing all the points above a threshold, typically 5% of the
maximum in the map.


*Finding the NCS asymmetric unit of the map*
--------------------------------------------

If you supply NCS matrices describing the NCS used to average the map (if any),
then map\_to\_model will try to define a region of the map that represents
the NCS asymmetric unit.  Application of the NCS operators to the NCS 
asymmetric unit will generate the entire map, and application to a model built
into the asymmetric unit will generate the entire model.  Normally
identification of the NCS asymmetric unit and segmentation of the map (below)
are done as a single step, yielding an asymmetric unit and a set of
contiguous regions of density within that asymmetric unit. The asymmetric unit
of NCS will be written out as a map to the segmentation\_dir directory,
superimposed on the shifted map (so that they can be viewed together in Coot).

*Segmentation of the map*
-------------------------

By default (segment=True) the map or NCS asymmetric unit of the map will
be segmented (cut into small pieces) into regions of connected density. This
is done by choosing a threshold of density and identifying contiguous regions
where all grid points are above this threshold. The threshold is chosen to
yield regions that have a size corresponding to about 50 residues.  The
regions of density are written out to the segmentation\_dir directory
and are superimposed on the shifted map (if you load the shifted map in 
Coot and a region map in Coot, they should superimpose.) 

*Model-building*
----------------

Models are built in several ways by map\_to\_model and then the best-fitting, 
non-overlapping models are chosen.  The main methods used for model-building 
are: 

::

  Standard RESOLVE model-building for PROTEIN/RNA/DNA for the entire 
  asymmetric unit  of NCS (or the entire molecule if no NCS).

  Helices (RNA) or helices/strands (PROTEIN) for entire asymmetric unit

  tracing chain (RNA/PROTEIN/DNA) for each segmented region, with various
  values of map sharpening applied

  RESOLVE model-building for each segmented region, with various values of
  map sharpening applied

Intermediate models are refined with phenix.real\_space\_refine and are
written out relative to the shifted map with origin at [0,0,0]. 
You can view these intermediate models, the shifted map, and the 
shifted map containing just the asymmetric unit of NCS, and any 
region maps in Coot and they should all superimpose.

Once all intermediate models are built, all models of each chain type are
combined, taking the best-fitting model for each part of the map. Then all 
chain types are combined, once again taking the best-fitting model for each
part of the map.  The models are refined again.

Then (if present) NCS is applied to the model and the full model is refined.
Finally the best model, with NCS applied if present, is shifted to match 
the original map and is written out.


Examples
--------

Standard run of map\_to\_model:
-------------------------------

Running map\_to\_model is easy. From the command-line you can type:

::

    phenix.map\_to\_model my_map.map seq.fa ncs_file=find_ncs.ncs_spec

where my_map.map is a CCP4, mrc or other related map format, seq.fa is a
sequence file, and find_ncs.ncs_spec is an optional file specifying any
NCS operators used in averaging the map. This can be in the form of
BIOMTR records from a PDB file as well.


Possible Problems
-----------------

Specific limitations and problems:
----------------------------------

Literature
----------

Additional information
----------------------


List of all available keywords
------------------------------

{{phil:phenix.command_line.map_to_model}}
