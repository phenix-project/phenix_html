Model-building into cryo-EM and low-resolution maps with map\_to\_model
=======================================================================

Author(s)
---------

-  map\_to\_model: Tom Terwilliger

Purpose
-------

The routine map\_to\_model will interpret a map (cryo-EM, low-resolution
X-ray) and try to build an atomic model, fully automatically.

Usage
-----

How map\_to\_model works:
----------------------------

If you have a CCP4-style (mrc, etc) map or just mtz map coefficients 
and a sequence file, you can use map\_to\_model to build a model into
your map. The tool map\_to\_model will identify what kind of chains to
build based on your sequence file.  It will find where your molecule is
in the map and cut out and work with just that part of the density.
If your map has been averaged based on NCS symmetry and 
you supply a file with that NCS information (.ncs_spec, biomtr.dat, etc),
map\_to\_model will find the asymmetric unit of NCS, build that, then
expand to the entire map.  The map\_to\_model tool will cut the density 
in your map into small pieces of connected density and 
try to build model into each one. It will merge all the 
pieces into a compact model, refine it, and superimpose 
final model on the original map. The type of chain or chains to be
built are chosen based on your sequence file.  If multiple chain types
are considered, the entire map is interpreted with each chain type, then
the best-fitting non-overlapping chains are chosen.

*Output files from map\_to\_model*
----------------------------------

**map\_to\_model.pdb**: A PDB file with the resulting model, superimposed on
   the original map (or on the magnified map if magnification is applied).



*Applying magnification to the map*
-----------------------------------

Cryo-EM maps often have a scale that is not precisely defined by the 
experiment. map\_to\_model allows application of a scale factor
(magnification) to the grid of the map.  Normally this scale factor
will be close to 1. If the magnification is specified and is not
equal to 1, it will be applied to the input map and a magnification map
will be written out to the output directory and will be used as if it were
the original input file from then on.  Additionally any input NCS information
will be adjusted by the same magnification factor (translations and
centers are scaled by the magnification factor, rotations are unchanged).
Any input models are not modified.


*Shifting the map to the origin*
--------------------------------

Most crystallographic maps have the origin at the corner of the map (
grid point [0,0,0]), while most cryo-EM maps have the orgin in the 
middle of the map.  To make a consistent map, any maps with an origin not 
at the corner are shifted to put the origin at grid point [0,0,0]. This map
is the shifted map that is used for further steps in model-building.
At the conclusion of model-building, the model is shifted back to 
superimpose on the original map.

*Finding the region containing the molecule*
--------------------------------------------

By default (density\_select=True), the region of the map containing density
is cut out of the entire map. This is particularly useful if the original map
is very large and the molecule only takes up a small part of the map.  This
portion of the map is then shifted to place the origin at grid point [0,0,0].
(At the conclusion of model-building, the final model is shifted back to 
superimpose on the original map.)  The region containing density is chosen
as a box containing all the points above a threshold, typically 5% of the
maximum in the map.


*Finding the NCS asymmetric unit of the map*
--------------------------------------------

If you supply NCS matrices describing the NCS used to average the map (if any),
then map\_to\_model will try to define a region of the map that represents
the NCS asymmetric unit.  Application of the NCS operators to the NCS 
asymmetric unit will generate the entire map, and application to a model built
into the asymmetric unit will generate the entire model.  Normally
identification of the NCS asymmetric unit and segmentation of the map (below)
are done as a single step, yielding an asymmetric unit and a set of
contiguous regions of density within that asymmetric unit. The asymmetric unit
of NCS will be written out as a map to the segmentation\_dir directory,
superimposed on the shifted map (so that they can be viewed together in Coot).

*Segmentation of the map*
-------------------------

By default (segment=True) the map or NCS asymmetric unit of the map will
be segmented (cut into small pieces) into regions of connected density. This
is done by choosing a threshold of density and identifying contiguous regions
where all grid points are above this threshold. The threshold is chosen to
yield regions that have a size corresponding to about 50 residues.  The
regions of density are written out to the segmentation\_dir directory
and are superimposed on the shifted map (if you load the shifted map in 
Coot and a region map in Coot, they should superimpose.) 

*Model-building*
----------------

Models are built in several ways by map\_to\_model and then the best-fitting, 
non-overlapping models are chosen.  The main methods used for model-building 
are: 

::

  Standard RESOLVE model-building for PROTEIN/RNA/DNA for the entire 
  asymmetric unit  of NCS (or the entire molecule if no NCS).

  Helices (RNA) or helices/strands (PROTEIN) for entire asymmetric unit

  tracing chain (RNA/PROTEIN/DNA) for each segmented region, with various
  values of map sharpening applied

  RESOLVE model-building for each segmented region, with various values of
  map sharpening applied

Intermediate models are refined with phenix.real\_space\_refine and are
written out relative to the shifted map with origin at [0,0,0]. 
You can view these intermediate models, the shifted map, and the 
shifted map containing just the asymmetric unit of NCS, and any 
region maps in Coot and they should all superimpose.

Once all intermediate models are built, all models of each chain type are
combined, taking the best-fitting model for each part of the map. Then all 
chain types are combined, once again taking the best-fitting model for each
part of the map.  The models are refined again.

Then (if present) NCS is applied to the model and the full model is refined.
Finally the best model, with NCS applied if present, is shifted to match 
the original map and is written out.


Examples
--------

Standard run of map\_to\_model:
-------------------------------

Running map\_to\_model is easy. From the command-line you can type:

::

    phenix.map_to_model my_map.map seq.fa ncs_file=find_ncs.ncs_spec

where my_map.map is a CCP4, mrc or other related map format, seq.fa is a
sequence file, and find_ncs.ncs_spec is an optional file specifying any
NCS operators used in averaging the map. This can be in the form of
BIOMTR records from a PDB file as well.

Combining partial runs from map\_to\_model:
-------------------------------------------

If you have a completed or partially-completed run of map\_to\_model and 
you want to run again but you do not want to re-run all the steps, you can
skip building some models by specifying a previously-built model for 
some steps. The models you can specify are:

::

    init_PROTEIN 

    init_RNA 

    init_DNA 

    helices_strands_only_PROTEIN 

    build_rna_helices_RNA 

    standard_PROTEIN 

    standard_RNA 

    standard_DNA 

    final_PROTEIN 

    final_RNA 

    final_DNA

For example, you can say:

::

    phenix.map_to_model my_map.map seq.fa ncs_file=find_ncs.ncs_spec
      partial_model=last_run/final_PROTEIN.pdb 
      partial_model_type=final_PROTEIN 
      partial_model=last_run/final_RNA.pdb
      partial_model_type=final_RNA
   
and then the files last_run/final_PROTEIN.pdb and last_run/final_RNA.pdb
will simply be combined to create a new model, instead of doing a full
model-building run. 

The stages of model-building that can be replaced are:

::

    init (building into individual regions of density)

    helices_strands_only (PROTEIN search for helices and strands)

    build_rna_helices (RNA search for A-form helices)

    standard (RESOLVE model-building on entire structure)

    final (combined model for one chain type)

The chain-types that can be specified are:

::

    PROTEIN

    RNA

    DNA



Possible Problems
-----------------

If you have a very large structure it is possible that your computer may not
have enough memory to run map\_to\_model and that one or more sub-processes 
might crash.  The best solution for this is to try on a computer with even
more memory.  You can also cut back the resolution used in steps that use
Fourier transformation.

If your queueing system crashes during a run or one or more sub-processes
crashes, then you might end up with models built for some stages of
building and others not. You can carry out another run and read in the models
that have already been built so that you do not need to build them again 
(see above in the section on combining partial runs).


Specific limitations and problems:
----------------------------------

Literature
----------

Additional information
----------------------


List of all available keywords
------------------------------

{{phil:phenix.autosol.map_to_model}}
