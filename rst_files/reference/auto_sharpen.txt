Auto-sharpening cryo-EM or crystallographic maps with auto_sharpen
==================================================================

Author(s)
---------

-  auto_sharpen: Tom Terwilliger

Purpose
-------

The routine auto_sharpen will automatically identify optimal
sharpening/blurring/map adjustment for the input map and will write
out an optimized version of the map. 

Video Tutorial
--------------

.. raw:: html

   <div style="position:relative;height:0;padding-bottom:56.25%"><iframe src="https://www.youtube.com/embed/S56rYoZWxnM" width="640" height="360" frameborder="0" style="position:absolute;width:100%;height:100%;left:0" allowfullscreen></iframe></div>

The `tutorial video <https://www.youtube.com/watch?v=S56rYoZWxnM>`_ is available on the
`Phenix YouTube channel
<https://www.youtube.com/channel/UCcdI0hfHngWAZLJWynxPQWg>`_ and covers the
following topics:

- basic overview
- how to run phenix.map_to_model via the GUI


GUI
---

A Graphical User Interface is available.


Usage
-----

How auto_sharpen works:
-----------------------

Auto-sharpen adjusts the resolution dependence of the map 
to maximize the clarity of the map.  You can choose to use
map kurtosis or the adjusted surface area of the map (default) for this 
purpose.  

The auto-sharpen tool works best at resolutions of about 4.5 A or
better. At lower resolutions it may be unable to distinguish 
variations in the quality of the map as the sharpening is varied.

Kurtosis is a standard statistical measure that reflects the peakiness of 
the map.  

The adjusted surface area is a combination of the surface area of
contours in the map at a particular threshold
and of the number of distinct regions enclosed by the top 30% (default) of
those contours.  The threshold is chosen by default to be one where the 
volume enclosed by the contours is 20% of the non-solvent volume in the map. 
The weighting between the surface area (to be maximized) and number of regions
enclosed (to be minimized) is chosen empirically (default region_weight=20).

Several resolution-dependent functions are tested, and the one
that gives the best adjusted surface area (or kurtosis) is chosen.  
In each case the map is transformed to obtain Fourier coefficients. The
amplitudes of these coefficients are then adjusted, keeping the phases
constant. The available functions for modifying the amplitudes are:

::

  No sharpening (map is left as is)

  Sharpening b-factor applied over entire resolution range (b_sharpen
  applied to achieve an effective isotropic overall b-value of b_iso).

  Sharpening b-factor applied up to resolution specified with the
  resolution=xxx keyword, then blurred beyond this resolution (with
  transition specified by the keyword k_sharpen, b_iso_to_d_cut).  If 
  the sharpening b_sharpen is negative (blurring the map),
  the blurring is applied over the entire resolution range.

  Resolution-dependent sharpening factor with three parameters.
  First the resolution-dependence of the map is removed by normalizing the
  amplitudes.  Then a scale factor S is to the data, where  
  log10(S) is determined by coefficients b[0],b[1],b[2] and a resolution 
  d_cut (typically d_cut is the nominal resolution of the map).
  The value of log10(S) varies smoothly from 0 at resolution=infinity, to b[0]
  at d_cut/2, to b[1] at d_cut, and to b[1]+b[2] at the highest resolution
  in the map.  The value of b[1] is limited to being no larger than b[0] and the
  value of b[1]+b[2] is limited to be no larger than b[1]. 


You can also choose to specify the sharpening/blurring parameters for your
map and they will simply be applied to the map. For example you can apply
a sharpening B-value (b_sharpen) to sharpen the map, or you can specify a
target overall B-value (b_iso) to obtain after sharpening.

*Box of density in sharpening*
------------------------------

Normally phenix.auto_sharpen will determine the optimal sharpening by 
examining the density in a box cut out of your map, then apply this to
the entire map.

*Local sharpening*
------------------

You can choose to apply autosharpening locally if you want.  In this case
the auto-sharpening parameters are determined in many boxes cut out of
the map, and corresponding sharpened maps are calculated.  The map that
is produced is a weighted map where the density at a particular point 
comes most from the sharpened map based on a box near that point.

*Half-map-based sharpening*
---------------------------

You can identify the sharpening parameters using two half-maps if you 
want.  The resolution-dependent correlation of density in the two half-maps
is used to identify the optimal resolution-dependent weighting of 
the map.  This approach requires a target resolution which is used
to set the overall fall-off with resolution for an ideal map.  That
fall-off for an ideal map is then multiplied by an estimated 
resolution-dependent correlation of density in the map with the true
map (the estimation comes from the half-map correlations).


*Model-based sharpening*
------------------------

You can identify instead the sharpening parameters using your map and a
model.  This approach requires a guess of the RMSD between the model and
the true model.  The resolution-dependent correlation of model and map
density is used as in the half-map approach above to identify the
weighting of Fourier coefficients.

*Using crystallographic maps*
--------------------------------

You can use phenix.auto_sharpen with a crystallographic map (represented 
as map coefficients).

*Shifting the map to the origin*
--------------------------------

Most crystallographic maps have the origin at the corner of the map (
grid point [0,0,0]), while most cryo-EM maps have the orgin in the 
middle of the map.  An output map with the origin shifted to the
corner of the map is optionally written out.


*Output files from auto_sharpen*
--------------------------------

**sharpened_map.ccp4**: Sharpened map.

**shifted_sharpened_map.ccp4**: Sharpened map, shifted to place the origin on grid point (0,0,0) and sharpened

**sharpened_map_coeffs.mtz**: Sharpened map, shifted to place the origin on grid point (0,0,0) and sharpened, represented as map coefficients.


Examples
--------

Standard run of auto_sharpen:
-----------------------------

Running auto_sharpen is easy. From the command-line you can type:

::

    phenix.auto_sharpen my_map.map resolution=2.6

where my_map.map is a CCP4, mrc or other related map format, and you 
specify the nominal resolution of the map.


Possible Problems
-----------------

Specific limitations and problems:
----------------------------------

Literature
----------

{{citation:autosharpen}}

Additional information
----------------------


List of all available keywords
------------------------------

{{phil:cctbx.maptbx.auto_sharpen}}
