Model superposition and morphing using secondary structure matching (SSM)
=========================================================================

Author(s)
---------

-  superpose_and_morph: Tom Terwilliger

Purpose
-------

Superpose moving model on fixed model, then optionally morph the moving
model to be similar to the fixed model and trim it back to the parts that
match.

Usage
-----

How superpose_and_morph works:
------------------------------

superpose_and_morph uses a combination of sequence-based and SSM-based 
(secondary structure matching) to superimpose two models.  The sequence-based
matching is the same as in phenix.superpose_pdbs.  The SSM matching is the
same as in phenix.search_and_morph.  The SSM matching consists
of identifying secondary structure in the two models, indexing all pairs of
secondary structure elements, and finding sets of matching pairs in the
two structures.  Normally the basic unit of a match is a set of three pairs
of secondary structure elements (they can be overlapping) with the same
spatial arrangement in the two structures.  Such a match is called a triple
in superpose_and_morph. 

A matching triples yields a unique orientation of the moving model.  Matching
triples are grouped into sets in which all the triples yield nearly the same
orientation. Then the transformations suggested by the largest groups are 
each tested by using them to superimpose the moving model on the fixed model
and noting the number of residues that superimpose.

The best-fitting superimposed moving models are then (optionally) morphed by
calculation of a real-space distortion field that changes over a typical 
distance of about 10 A (set by the parameter distortion_field_length).

Finally (optionally) the moving models are trimmed to remove 
segments that are very different from the fixed model.

Options
-------

  SSM match to map.  You can supply a map and specify ssm_match_to_map=True.
  The tool will search for helices and strands in the map and generate a
  target helices_strands model.  Then a brute force SSM matching of your
  moving model to the helices_strands model is carried out and matches are
  scored with map-model correlation. This option can also be carried out
  with the dock_in_map tool.
  Note this option does not support trimming or morphing.

  Brute force SSM.  You can supply a target model that has helices and strands.
  Helices and strands in your moving model will be matched to those in the
  target model to superpose it.  You can also supply a map_file and specify
  score_superpose_brute_force_with_cc if you wish.
  Note this option does not support trimming or morphing.


Examples
--------

Standard run of superpose_and_morph:
------------------------------------

Running superpose_and_morph is easy. From the command-line you can type:

::

    phenix.superpose_and_morph fixed_model=fixed_model.pdb \
       moving_model=moving_model.pdb


This will superimpose moving_model.pdb on fixed_model.pdb, morph it (gradual
adjustment of atomic positions with location along the chain and in space),
and trim moving_model back to the region where they are similar.

To superpose a model on a map you can say:

::

    phenix.superpose_and_morph map_file=map.ccp4 moving_model=moving_model.pdb

This will find helices and strands in map.ccp4 and superpose moving_model.pdb
on those secondary structure elements.

Possible Problems
-----------------

Specific limitations and problems:
----------------------------------

Literature
----------

Additional information
----------------------


List of all available keywords
------------------------------

{{phil:phenix.programs.superpose_and_morph}}
