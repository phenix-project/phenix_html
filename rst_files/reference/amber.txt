==============================================================
Running phenix.refine using Amber gradients
==============================================================

.. contents::

Authors
=======

Pawel Janowski and Nigel W. Moriarty

Theory and Background
=====================

Amber refinement in Phenix combines the power and functionality of
Phenix crystallographic refinement 

Running refinement with Phenix and Amber
========================================

The Phenix user should install the latest AmberTools. Follow the
installation instructions and set the AMBERHOME environment variable
to point to the Amber installation. This is required for the
installation and can be added to the appropriate login script.

To create to bridge between Phenix and Amber, run:

::

	[~:]$ phenix.build_amber_interface

This will create a link to $AMBERHOME in the Phenix installation,
reconfigure Phenix to include Amber and build the code required to
prepare Amber files and run them seamlessly with Phenix. Amber will remain
linked and therefore $AMBERHOME should remain set to the Amber installation.

To run Amber in Phenix, two files need to be created. You can create them
using AmberPrep thus:

::

  phenix.AmberPrep 9xyz.pdb

which will generate three files.

::

  4amber_9xyz.prmtop
  4amber_9xyz.rst7
  4phenix_9xyz.pdb
	
The first two are the Amber files and the last one is the PDB file that matches
the two Amber files for atom order and must be used in phenix.refine replacing
9xyz.pdb. So the refinement command is

::

  phenix.refine 4phenix_9xyz.pdb 9xyz.mtz use_amber=True topology_file_name=4amber_9xyz.prmtop coordinate_file_name=4amber_9xyz.rst7

Here is list of keywords:

  REQUIRED KEYWORDS
    use_amber - turn on ligand refinement with Amber. (default = False)

 

